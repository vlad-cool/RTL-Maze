// Copyright (C) 2024  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 23.1std.1 Build 993 05/14/2024 SC Lite Edition"

// DATE "11/07/2024 13:10:48"

// 
// Device: Altera 5M570ZF256C5 Package FBGA256
// 

// 
// This Verilog file should be used for Questa Intel FPGA (Verilog) only
// 

`timescale 1 ps/ 1 ps

module Maze (
	clk,
	rst,
	tft_rst,
	tft_clk,
	tft_mosi,
	tft_dc,
	tft_cs);
input 	clk;
input 	rst;
output 	tft_rst;
output 	tft_clk;
output 	tft_mosi;
output 	tft_dc;
output 	tft_cs;

// Design Ports Information


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \clk~combout ;
wire \spi_transmitter|tft_clk~combout ;
wire [2:0] \spi_transmitter|transmit_counter ;


// Location: PIN_H5,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \clk~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\clk~combout ),
	.padio(clk));
// synopsys translate_off
defparam \clk~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X7_Y5_N3
maxv_lcell \spi_transmitter|transmit_counter[1] (
// Equation(s):
// \spi_transmitter|transmit_counter [1] = DFFEAS((\spi_transmitter|transmit_counter [1] & (((\spi_transmitter|transmit_counter [0])))) # (!\spi_transmitter|transmit_counter [1] & (((!\spi_transmitter|transmit_counter [0] & \spi_transmitter|transmit_counter 
// [2])))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\spi_transmitter|transmit_counter [1]),
	.datab(vcc),
	.datac(\spi_transmitter|transmit_counter [0]),
	.datad(\spi_transmitter|transmit_counter [2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\spi_transmitter|transmit_counter [1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \spi_transmitter|transmit_counter[1] .lut_mask = "a5a0";
defparam \spi_transmitter|transmit_counter[1] .operation_mode = "normal";
defparam \spi_transmitter|transmit_counter[1] .output_mode = "reg_only";
defparam \spi_transmitter|transmit_counter[1] .register_cascade_mode = "off";
defparam \spi_transmitter|transmit_counter[1] .sum_lutc_input = "datac";
defparam \spi_transmitter|transmit_counter[1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y5_N4
maxv_lcell \spi_transmitter|transmit_counter[2] (
// Equation(s):
// \spi_transmitter|transmit_counter [2] = DFFEAS(((\spi_transmitter|transmit_counter [2] & ((\spi_transmitter|transmit_counter [0]) # (\spi_transmitter|transmit_counter [1])))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\spi_transmitter|transmit_counter [0]),
	.datac(\spi_transmitter|transmit_counter [2]),
	.datad(\spi_transmitter|transmit_counter [1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\spi_transmitter|transmit_counter [2]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \spi_transmitter|transmit_counter[2] .lut_mask = "f0c0";
defparam \spi_transmitter|transmit_counter[2] .operation_mode = "normal";
defparam \spi_transmitter|transmit_counter[2] .output_mode = "reg_only";
defparam \spi_transmitter|transmit_counter[2] .register_cascade_mode = "off";
defparam \spi_transmitter|transmit_counter[2] .sum_lutc_input = "datac";
defparam \spi_transmitter|transmit_counter[2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y5_N2
maxv_lcell \spi_transmitter|transmit_counter[0] (
// Equation(s):
// \spi_transmitter|transmit_counter [0] = DFFEAS(((!\spi_transmitter|transmit_counter [0] & ((\spi_transmitter|transmit_counter [2]) # (\spi_transmitter|transmit_counter [1])))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\spi_transmitter|transmit_counter [2]),
	.datab(vcc),
	.datac(\spi_transmitter|transmit_counter [1]),
	.datad(\spi_transmitter|transmit_counter [0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\spi_transmitter|transmit_counter [0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \spi_transmitter|transmit_counter[0] .lut_mask = "00fa";
defparam \spi_transmitter|transmit_counter[0] .operation_mode = "normal";
defparam \spi_transmitter|transmit_counter[0] .output_mode = "reg_only";
defparam \spi_transmitter|transmit_counter[0] .register_cascade_mode = "off";
defparam \spi_transmitter|transmit_counter[0] .sum_lutc_input = "datac";
defparam \spi_transmitter|transmit_counter[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y5_N7
maxv_lcell \spi_transmitter|tft_clk (
// Equation(s):
// \spi_transmitter|tft_clk~combout  = (\clk~combout ) # ((!\spi_transmitter|transmit_counter [0] & (!\spi_transmitter|transmit_counter [2] & !\spi_transmitter|transmit_counter [1])))

	.clk(gnd),
	.dataa(\clk~combout ),
	.datab(\spi_transmitter|transmit_counter [0]),
	.datac(\spi_transmitter|transmit_counter [2]),
	.datad(\spi_transmitter|transmit_counter [1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\spi_transmitter|tft_clk~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \spi_transmitter|tft_clk .lut_mask = "aaab";
defparam \spi_transmitter|tft_clk .operation_mode = "normal";
defparam \spi_transmitter|tft_clk .output_mode = "comb_only";
defparam \spi_transmitter|tft_clk .register_cascade_mode = "off";
defparam \spi_transmitter|tft_clk .sum_lutc_input = "datac";
defparam \spi_transmitter|tft_clk .synch_mode = "off";
// synopsys translate_on

// Location: PIN_E15,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \tft_rst~I (
	.datain(gnd),
	.oe(vcc),
	.combout(),
	.padio(tft_rst));
// synopsys translate_off
defparam \tft_rst~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_D15,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \tft_clk~I (
	.datain(!\spi_transmitter|tft_clk~combout ),
	.oe(vcc),
	.combout(),
	.padio(tft_clk));
// synopsys translate_off
defparam \tft_clk~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_C15,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \tft_mosi~I (
	.datain(gnd),
	.oe(vcc),
	.combout(),
	.padio(tft_mosi));
// synopsys translate_off
defparam \tft_mosi~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_C14,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \tft_dc~I (
	.datain(gnd),
	.oe(vcc),
	.combout(),
	.padio(tft_dc));
// synopsys translate_off
defparam \tft_dc~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_D16,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \tft_cs~I (
	.datain(gnd),
	.oe(vcc),
	.combout(),
	.padio(tft_cs));
// synopsys translate_off
defparam \tft_cs~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_M9,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \rst~I (
	.datain(gnd),
	.oe(gnd),
	.combout(),
	.padio(rst));
// synopsys translate_off
defparam \rst~I .operation_mode = "input";
// synopsys translate_on

endmodule
